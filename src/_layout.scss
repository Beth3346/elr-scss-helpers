// scss-lint:disable ImportantRule
@import 'node_modules/elr-scss-functions/main';

// Layout Classes
@mixin elr-reset-element() {
  margin: 0;
  padding: 0;
  line-height: 1;
  border: 0;
}

// TODO: import this from layouts scss module
// Modern clearfix
// Use instead of overflow:hidden to clear floats

@mixin elr-clearfix() {
  &:after,
  &:before {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

@mixin elr-screen-reader() {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Centers an element horizontally on the page

@mixin elr-center-block($config: ()) {
  margin-left: auto !important;
  margin-right: auto !important;
  float: none !important;
}

@mixin elr-layout-classes($config: ()) {
  $config: extend(
    (
      prefix: 'elr'
    ),
    $config
  );

  $prefix: map-get($config, prefix);

  @for $i from 2 through 4 {
    .#{$prefix}-columns-#{$i} {
      columns: $i 200px;
      column-gap: 2em;
    }
  }

  .#{$prefix}-pull-left {
    float: left !important;
  }

  .#{$prefix}-pull-right {
    float: right !important;
  }

  .#{$prefix}-no-float {
    float: none !important;
  }

  .#{$prefix}-clear {
    @include elr-clearfix;
  }

  .#{$prefix}-center-block {
    @include elr-center-block;
  }

  .#{$prefix}-screen-reader {
    @include elr-screen-reader;
  }

  .#{$prefix}-no-background {
    background: transparent !important;
  }

  .#{$prefix}-no-border {
    border: 0 !important;
  }

  .#{$prefix}-o-hidden {
    overflow: hidden !important;
  }

  .#{$prefix}-o-scroll {
    overflow: scroll !important;
  }

  .#{$prefix}-o-scroll-x {
    overflow-x: scroll !important;
    overflow-y: hidden;
  }

  .#{$prefix}-o-scroll-y {
    overflow-x: hidden;
    overflow-y: scroll !important;
  }

  .#{$prefix}-no-margin {
    margin: 0 !important;
  }

  .#{$prefix}-no-padding {
    padding: 0 !important;
  }

  $steps: 5 10 15 20 25 30 35 40;

  @each $step in $steps {
    .#{$prefix}-p-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-pt-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-pr-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-pb-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-pl-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-m-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-mt-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-mr-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-mb-#{$step} {
      padding: #{$step}px !important;
    }

    .#{$prefix}-ml-#{$step} {
      padding: #{$step}px !important;
    }
  }
}
